<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.geometry.*?>
<?import javafx.scene.text.*?>
<?import java.lang.*?>
<?import java.util.*?>
<?import javafx.scene.*?>
<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>

<StackPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" opacity="0.91" prefHeight="540.0" prefWidth="960.0" style="-fx-background-image: url(&quot;file:\D:\menu.jpg&quot;);" xmlns="http://javafx.com/javafx/8" xmlns:fx="http://javafx.com/fxml/1" fx:controller="controller.RulesScreenController">
   <children>
      <BorderPane prefHeight="200.0" prefWidth="200.0">
         <top>
            <Label text="RULES" textFill="WHITE" BorderPane.alignment="CENTER">
               <font>
                  <Font name="Arial Black" size="36.0" />
               </font>
               <BorderPane.margin>
                  <Insets top="10.0" />
               </BorderPane.margin>
            </Label>
         </top>
         <center>
            <VBox alignment="TOP_CENTER" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="400.0" prefWidth="750.0" spacing="20.0" style="-fx-background-color: rgba(100, 100, 150, 0.3); -fx-background-radius: 20;" BorderPane.alignment="CENTER">
               <BorderPane.margin>
                  <Insets />
               </BorderPane.margin>
            </VBox>
         </center>
         <bottom>
            <Button fx:id="goBackButton" alignment="CENTER" mnemonicParsing="false" onAction="#goBackHandle" stylesheets="@../css/button.css" text="Go back" BorderPane.alignment="CENTER">
               <BorderPane.margin>
                  <Insets bottom="10.0" />
               </BorderPane.margin>
            </Button>
         </bottom>
      </BorderPane>
      <Text fill="WHITE" strokeType="OUTSIDE" strokeWidth="0.0" text="The game is played using: &#10;- a decoding board, with a shield at one end covering a row of four large holes, and twelve (or ten, or eight, or six) &#10;additional rows containing four large holes next to a set of four small holes;&#10;- code pegs of six (or more; see Variations below) different colors, with round heads, which will be placed in the large holes &#10;on the board; &#10;- key pegs, some colored black, some white, which are flat-headed and smaller than the code pegs; they will be placed &#10;in the small holes on the board.&#10;The two players decide in advance how many games they will play, which must be an even number. One player becomes &#10;the codemaker, the other the codebreaker. The codemaker chooses a pattern of four code pegs. Duplicates and blanks &#10;are allowed depending on player choice, so the player could even choose four code &#10;pegs of the same color or four blanks. In the instance that blanks are not elected to be a part of the game, &#10;the codebreaker may not use blanks in order to establish the final code. The chosen pattern is placed in the four holes &#10;covered by the shield, visible to the codemaker but not to the codebreaker.&#10;The codebreaker tries to guess the pattern, in both order and color, within twelve (or ten, or eight) turns. Each guess is made by&#10; placing a row of code pegs on the decoding board. Once placed, the codemaker provides feedback by placing from zero to four &#10;key pegs in the small holes of the row with the guess. A colored or black key peg is placed for each code &#10;peg from the guess which is correct in both color and position. A white key peg indicates the existence of a correct &#10;color code peg placed in the wrong position. Screenshot of software implementation llustrating the example. &#10;If there are duplicate colours in the guess, they cannot all be awarded a key peg unless they correspond to the same number of duplicate &#10;colours in the hidden code. &#10;For example, if the hidden code is white-white-black-black and the player guesses white-white-white-black, the codemaker &#10;will award two colored key pegs for the two correct whites, nothing for the third white as there is not a third white in the code, &#10;and a colored key peg for the black. No indication is given of the fact that the code also includes a second black. &#10;Once feedback is provided, another guess is made; guesses and feedback continue to alternate until either the codebreaker&#10;guesses correctly, or twelve (or ten, or eight) incorrect guesses are made. " />
   </children>
</StackPane>
